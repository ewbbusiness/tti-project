{"version":3,"sources":["logo.svg","water.png","soil.png","NetworkFunctions.js","App.js","reportWebVitals.js","index.js"],"names":["apiURL","getImageURLs","text","a","fetch","response","console","log","json","data","App","useState","showTextInput","setShowTextInput","setText","currentIndex","setCurrentIndex","hoverOnText","setHoverOnText","undefined","imageURLs","setImageURLs","placeholderText","setPlaceholderText","alert","showImage","hideImage","HoverableText","handleClick","words","String","split","forEach","d","i","replace","filter","map","w","index","id","onMouseEnter","onMouseOver","onMouseLeave","onClick","className","TextField","placeholder","multiline","rows","rowsMax","fullWidth","value","onChange","e","target","word","src","style","display","Button","variant","color","size","startIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.865d753d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/water.b986bb3b.png\";","export default __webpack_public_path__ + \"static/media/soil.c938578c.png\";","import React from 'react';\nimport axios from 'axios';\n\n// let apiURL = 'https://ewb-tti.herokuapp.com/api/';\nlet apiURL = 'https://c8da65336a2c.ngrok.io/api/';\n\nexport async function getFakeData() {\n  try {\n    const response = await fetch(apiURL + 'fakedata');\n    const json = await response.json();\n    let data = json.data;\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport async function getImageURLs(text) {\n  try {\n    const response = await fetch(apiURL + 'geturls/' + text + '/');\n    console.log(response);\n    const json = await response.json();\n    let data = json.data;\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport water from './water.png';\nimport soil from './soil.png';\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport BackIcon from '@material-ui/icons/KeyboardBackspace';\nimport { getFakeData, getImageURLs } from './NetworkFunctions';\n\nfunction App() {\n  /** if true, shows the input page, if not, shows hoverablespans */\n  const [showTextInput, setShowTextInput] = useState(true);\n  const [text, setText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [hoverOnText, setHoverOnText] = useState(false);\n  const [imageURLs, setImageURLs] = useState(undefined);\n  const [placeholderText, setPlaceholderText] = useState(\n    'Input your instructions here!'\n  );\n\n  async function saveTextInput() {\n    // guard\n    if (!showTextInput) {\n      setShowTextInput(true);\n      return;\n    }\n    // request server\n    if (text != '' && placeholderText != 'Loading...') {\n      setPlaceholderText('Loading...');\n      const response = await getImageURLs(text);\n      setPlaceholderText('Input your instructions here!');\n      setImageURLs(response);\n      console.log(response);\n      setShowTextInput(false);\n    } else {\n      alert('Please enter a non-empty set of instructions.');\n    }\n  }\n\n  function handleClick(word) {\n    console.log(word);\n  }\n\n  function showImage() {\n    setHoverOnText(true);\n  }\n\n  function hideImage() {\n    setHoverOnText(false);\n  }\n\n  const HoverableText = (text, handleClick) => {\n    var words = String(text.text).split(' ');\n    words.forEach((d, i) => {\n      words[i] = d\n        .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\n        .replace(/\\s{2,}/g, ' ');\n    });\n    var words = words.filter((d) => {\n      return d !== '';\n    });\n    return words.map((w, index) =>\n      imageURLs[index] !== '' ? (\n        <span\n          id='span'\n          onMouseEnter={() => setCurrentIndex(index)}\n          onMouseOver={showImage}\n          onMouseLeave={hideImage}\n          onClick={() => alert(w)}\n        >\n          {w}\n        </span>\n      ) : (\n        <span id='spanNoHighlight'>{w}</span>\n      )\n    );\n  };\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <h3>Engineers Without Borders â€“ Cornell University</h3>\n        <h4>A Text-to-Image Project by Daisy Shu and Sean Yu</h4>\n        <h4>April 2021</h4>\n      </header>\n      <div className='App-body'>\n        {showTextInput ? (\n          <div id='textfield'>\n            <TextField\n              className='textfield'\n              placeholder={placeholderText}\n              multiline\n              rows={25}\n              rowsMax={1000}\n              fullWidth={true}\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            />\n          </div>\n        ) : (\n          <div id='textSpans'>\n            <HoverableText text={text} handleClick={handleClick} />\n            <img\n              src={imageURLs !== undefined ? imageURLs[currentIndex] : null}\n              style={{ display: hoverOnText ? 'inline' : 'none' }}\n            />\n          </div>\n        )}\n        <div id='savebutton'>\n          <Button\n            className='savebutton'\n            variant='contained'\n            color='primary'\n            size='medium'\n            startIcon={showTextInput ? <SaveIcon /> : <BackIcon />}\n            onClick={saveTextInput}\n          >\n            {showTextInput ? 'Process' : 'Back'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}