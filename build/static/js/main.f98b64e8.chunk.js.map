{"version":3,"sources":["water.png","logo.svg","soil.png","App.js","reportWebVitals.js","index.js"],"names":["App","useState","showTextInput","setShowTextInput","text","setText","selectedText","setSelectedText","hoverOnText","setHoverOnText","showImage","hideImage","HoverableText","handleClick","words","String","split","forEach","d","i","replace","filter","map","w","id","onMouseEnter","toLowerCase","onMouseOver","onMouseLeave","onClick","alert","className","TextField","placeholder","multiline","rows","rowsMax","fullWidth","value","onChange","e","target","word","console","log","src","water","soil","style","display","Button","variant","color","size","startIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,GCAA,I,MDAA,IAA0B,mCEA1B,MAA0B,iC,0DC0G1BA,MA9Ff,WAAgB,IAAD,EAC6BC,oBAAS,GADtC,mBACNC,EADM,KACSC,EADT,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,OAG2BJ,mBAAS,IAHpC,mBAGNK,EAHM,KAGQC,EAHR,OAIyBN,oBAAS,GAJlC,mBAINO,EAJM,KAIOC,EAJP,KAmBb,SAASC,IACPD,GAAe,GAGjB,SAASE,IACPF,GAAe,GAGjB,IAAMG,EAAgB,SAACR,EAAMS,GAC3B,IAMIC,EAGJ,OATIA,EAAQC,OAAOX,EAAKA,MAAMY,MAAM,MAC9BC,SAAQ,SAACC,EAAGC,GAChBL,EAAMK,GAAKD,EACRE,QAAQ,+BAAgC,IACxCA,QAAQ,UAAW,SAEpBN,EAAQA,EAAMO,QAAO,SAACH,GACxB,MAAa,KAANA,MAEII,KAAI,SAACC,GAAD,OACf,sBACEC,GAAG,OACHC,aAAc,kBAAMlB,EAAgBgB,EAAEG,gBACtCC,YAAajB,EACbkB,aAAcjB,EACdkB,QAAS,kBAAMC,MAAMP,IALvB,SAOGA,QAKP,OACE,sBAAKQ,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qFACA,kFACA,+CAEF,sBAAKA,UAAU,WAAf,UACG7B,EACC,qBAAKsB,GAAG,YAAR,SACE,cAACQ,EAAA,EAAD,CACED,UAAU,YACVE,YAAY,gCACZC,WAAS,EACTC,KAAM,GACNC,QAAS,IACTC,WAAW,EACXC,MAAOlC,EACPmC,SAAU,SAACC,GAAD,OAAOnC,EAAQmC,EAAEC,OAAOH,YAItC,sBAAKd,GAAG,YAAR,UACE,cAACZ,EAAD,CAAeR,KAAMA,EAAMS,YA1DrC,SAAqB6B,GACnBC,QAAQC,IAAIF,MA0DJ,qBAAKG,IAAqB,SAAhBvC,EAA0BwC,EAAQC,EAAMC,MAAO,CAACC,QAASzC,EAAc,SAAW,aAGhG,qBAAKgB,GAAG,aAAR,SACE,cAAC0B,EAAA,EAAD,CACEnB,UAAU,aACVoB,QAAQ,YACRC,MAAM,UACNC,KAAK,SACLC,UAAWpD,EAAgB,cAAC,IAAD,IAAe,cAAC,IAAD,IAC1C2B,QA9EV,WACc,IAARzB,EACFD,GAAkBD,GAGlB4B,MAAM,kDAmEF,SAQG5B,EAAgB,UAAY,kBCtF1BqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f98b64e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/water.b986bb3b.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/soil.c938578c.png\";","import logo from './logo.svg';\nimport './App.css';\nimport water from './water.png';\nimport soil from './soil.png';\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport BackIcon from '@material-ui/icons/KeyboardBackspace';\n\nfunction App() {\n  const [showTextInput, setShowTextInput] = useState(true);\n  const [text, setText] = useState('');\n  const [selectedText, setSelectedText] = useState('');\n  const [hoverOnText, setHoverOnText] = useState(false);\n\n  function saveTextInput() {\n    if (text != '') {\n      setShowTextInput(!showTextInput)\n    }\n    else {\n      alert('Please enter a non-empty set of instructions.')\n    }\n  }\n\n  function handleClick(word) {\n    console.log(word);\n  }\n\n  function showImage() {\n    setHoverOnText(true);\n  }\n\n  function hideImage() {\n    setHoverOnText(false);\n  }\n\n  const HoverableText = (text, handleClick) => {\n    var words = String(text.text).split(' ');\n    words.forEach((d, i) => {\n      words[i] = d\n        .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\n        .replace(/\\s{2,}/g, ' ');\n    });\n    var words = words.filter((d) => {\n      return d !== '';\n    });\n    return words.map((w) => (\n      <span\n        id='span'\n        onMouseEnter={() => setSelectedText(w.toLowerCase())}\n        onMouseOver={showImage}\n        onMouseLeave={hideImage}\n        onClick={() => alert(w)}\n      >\n        {w}\n      </span>\n    ));\n  };\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <h3>Engineers Without Borders â€“ Cornell University</h3>\n        <h4>A Text-to-Image Project by Daisy Shu and Sean Yu</h4>\n        <h4>April 2021</h4>\n      </header>\n      <div className='App-body'>\n        {showTextInput ? (\n          <div id='textfield'>\n            <TextField\n              className='textfield'\n              placeholder='Input your instructions here!'\n              multiline\n              rows={25}\n              rowsMax={1000}\n              fullWidth={true}\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            />\n          </div>\n        ) : (\n          <div id='textSpans'>\n            <HoverableText text={text} handleClick={handleClick} />\n            <img src={selectedText == 'water' ? water : soil} style={{display: hoverOnText ? \"inline\" : \"none\"}} />\n          </div>\n          )}\n        <div id='savebutton'>\n          <Button\n            className='savebutton'\n            variant='contained'\n            color='primary'\n            size='medium'\n            startIcon={showTextInput ? <SaveIcon /> : <BackIcon />}\n            onClick={saveTextInput}\n          >\n            {showTextInput ? 'Process' : 'Back'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}